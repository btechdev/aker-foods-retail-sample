buildscript {
	repositories {
		maven { url 'https://plugins.gradle.org/m2/' } // Gradle Plugin Portal
	}
	dependencies {
		// OneSignal-Gradle-Plugin
		classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:0.12.8'
	}
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
	localPropertiesFile.withReader('UTF-8') { reader ->
		localProperties.load(reader)
	}
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
	throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
	flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
	flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.google.firebase.crashlytics'

android {
	compileSdkVersion 30

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
	}

	lintOptions {
		disable 'InvalidPackage'
	}

	defaultConfig {
		applicationId "com.akerretail.order"
		minSdkVersion 19
		targetSdkVersion 30
		versionCode flutterVersionCode.toInteger()
		versionName flutterVersionName
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		debug {
			applicationIdSuffix ".dev"
			versionNameSuffix "-dev"
			manifestPlaceholders = [
					onesignal_app_id               : '15cc841b-f301-4663-a12e-9f5467eaf167',
					onesignal_google_project_number: 'REMOTE'
			]
		}

		release {
			manifestPlaceholders = [
					onesignal_app_id               : '7af8fb62-b112-489a-ba0a-fd4baea1fbe5',
					onesignal_google_project_number: 'REMOTE'
			]
			// TODO: Add your own signing config for the release build.
			// Signing with the debug keys for now, so `flutter run --release` works.
			signingConfig signingConfigs.debug
			minifyEnabled true
			useProguard true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

flutter {
	source '../..'
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

	// BoM for the Firebase platform
	implementation platform('com.google.firebase:firebase-bom:25.12.0')
	// When using the BoM, you don't specify versions in Firebase library dependencies

	// Dependency for the Crashlytics library
	implementation 'com.google.firebase:firebase-crashlytics-ktx'

	// Dependency for the OneSignal library
	implementation 'com.onesignal:OneSignal:3.15.3'
}

apply plugin: 'com.google.gms.google-services'

<manifest
	xmlns:android="http://schemas.android.com/apk/res/android"
	package="com.akerfoods.aker_foods_retail">

	<uses-permission android:name="android.permission.INTERNET"/>
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
	<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>

	<!-- io.flutter.app.FlutterApplication is an android.app.Application that
		 calls FlutterMain.startInitialization(this); in its onCreate method.
		 In most cases you can leave this as-is, but you if you want to provide
		 additional functionality it is fine to subclass or reimplement
		 FlutterApplication and put your custom class here. -->
	<application
		android:name="io.flutter.app.FlutterApplication"
		android:icon="@mipmap/ic_launcher"
		android:label="Aker Retail">
		<activity
			android:name=".MainActivity"
			android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
			android:hardwareAccelerated="true"
			android:launchMode="singleTop"
			android:theme="@style/LaunchTheme"
			android:windowSoftInputMode="adjustResize">

			<!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
			<meta-data
				android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
				android:value="true"/>
			<meta-data
				android:name="io.flutter.embedding.android.SplashScreenDrawable"
				android:resource="@drawable/launch_background"/>

			<intent-filter>
				<action android:name="android.intent.action.MAIN"/>
				<category android:name="android.intent.category.LAUNCHER"/>
			</intent-filter>
		</activity>
		<!-- Don't delete the meta-data below.
			 This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
		<meta-data
			android:name="flutterEmbedding"
			android:value="2"/>

		<!-- Set your Segment write key and change the automatic event tracking
		   on if you wish the library to take care of it for you.
		   Remember that the application lifecycle events won't have any
		   special context set for you by the time it is initialized. -->
		<meta-data
			android:name="com.claimsforce.segment.WRITE_KEY"
			android:value="kr8vC00Y4crXCwA5ryHSOX8yCrUCKEOJ"/>
		<meta-data
			android:name="com.claimsforce.segment.TRACK_APPLICATION_LIFECYCLE_EVENTS"
			android:value="true"/>
		<meta-data
			android:name="com.claimsforce.segment.ENABLE_BRANCH_IO_INTEGRATION"
			android:value="false"/>
		<meta-data
			android:name="com.claimsforce.segment.ENABLE_AMPLITUDE_INTEGRATION"
			android:value="false"/>
		<meta-data
			android:name="com.claimsforce.segment.DEBUG"
			android:value="true"/>
		<meta-data
			android:name="com.google.android.geo.API_KEY"
			android:value="AIzaSyAxfdSiEsi2r0yL4A53HxEtuc0NxTkttX8"/>
	</application>
</manifest>